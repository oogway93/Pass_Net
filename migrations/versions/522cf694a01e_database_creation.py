"""Database creation

Revision ID: 522cf694a01e
Revises: 
Create Date: 2023-08-14 15:21:00.658677

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '522cf694a01e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Password',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('password', sa.String(), nullable=True),
                    sa.Column('length', sa.Integer(), nullable=True),
                    sa.Column('uppercase_chars', sa.Boolean(), nullable=True),
                    sa.Column('digits', sa.Boolean(), nullable=True),
                    sa.Column('special_chars', sa.Boolean(), nullable=True),
                    sa.Column('hard_mode', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('role_id_seq'::regclass)"),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False,
                              nullable=True),
                    sa.PrimaryKeyConstraint('id', name='role_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('django_migrations',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
                    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
                    )
    op.create_table('Image',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Image_id_seq"\'::regclass)'),
                              autoincrement=True, nullable=False),
                    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('tag', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('mime_type', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('modification_time', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='Image_pkey')
                    )
    op.create_index('ix_Image_id', 'Image', ['id'], unique=False)
    op.create_table('Laptop',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('operating_system', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('model', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('release_year', sa.DATE(), autoincrement=False, nullable=False),
                    sa.Column('memory', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('color', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('delivery', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('is_out_of_stocks', sa.BOOLEAN(), autoincrement=False, nullable=False),
                    sa.Column('manufacturer_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturer.id'],
                                            name='Laptop_manufacturer_id_fd7cb51e_fk_Manufacturer_id',
                                            initially='DEFERRED', deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='Laptop_pkey')
                    )
    op.create_index('Laptop_manufacturer_id_fd7cb51e', 'Laptop', ['manufacturer_id'], unique=False)
    op.create_table('User',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
                    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
                    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
                    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
                    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
                    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
                    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
                    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
                    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
                    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.Column('images', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
                    sa.Column('is_verified_email', sa.BOOLEAN(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='User_pkey'),
                    sa.UniqueConstraint('email', name='User_email_667201b5_uniq'),
                    sa.UniqueConstraint('username', name='User_username_key'),
                    postgresql_ignore_search_path=False
                    )
    op.create_index('User_username_3851fdce_like', 'User', ['username'], unique=False)
    op.create_index('User_email_667201b5_like', 'User', ['email'], unique=False)
    op.create_table('Order',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('first_name', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
                    sa.Column('last_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
                    sa.Column('email', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
                    sa.Column('country', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
                    sa.Column('city', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
                    sa.Column('address', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
                    sa.Column('basket_history', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False,
                              nullable=False),
                    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=False),
                    sa.Column('customer_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['customer_id'], ['User.id'],
                                            name='orders_order_customer_id_0b76f6a4_fk_User_id', initially='DEFERRED',
                                            deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='orders_order_pkey')
                    )
    op.create_index('orders_order_customer_id_0b76f6a4', 'Order', ['customer_id'], unique=False)
    op.create_table('user',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('registered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
                    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='user_role_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='user_pkey')
                    )
    op.create_table('django_admin_log',
                    sa.Column('id', sa.INTEGER(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
                    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
                    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.CheckConstraint('action_flag >= 0', name='django_admin_log_action_flag_check'),
                    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'],
                                            name='django_admin_log_content_type_id_c4bce8eb_fk_django_co',
                                            initially='DEFERRED', deferrable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['User.id'],
                                            name='django_admin_log_user_id_c564eba6_fk_User_id', initially='DEFERRED',
                                            deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='django_admin_log_pkey')
                    )
    op.create_index('django_admin_log_user_id_c564eba6', 'django_admin_log', ['user_id'], unique=False)
    op.create_index('django_admin_log_content_type_id_c4bce8eb', 'django_admin_log', ['content_type_id'], unique=False)
    op.create_table('auth_permission',
                    sa.Column('id', sa.INTEGER(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
                    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'],
                                            name='auth_permission_content_type_id_2f476e4b_fk_django_co',
                                            initially='DEFERRED', deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
                    sa.UniqueConstraint('content_type_id', 'codename',
                                        name='auth_permission_content_type_id_codename_01ab375a_uniq'),
                    postgresql_ignore_search_path=False
                    )
    op.create_index('auth_permission_content_type_id_2f476e4b', 'auth_permission', ['content_type_id'], unique=False)
    op.create_table('Manufacturer',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('manufacturer', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='phones_manufacturer_pkey'),
                    sa.UniqueConstraint('manufacturer', name='phones_manufacturer_manufacturer_key'),
                    postgresql_ignore_search_path=False
                    )
    op.create_index('phones_manufacturer_manufacturer_60200b51_like', 'Manufacturer', ['manufacturer'], unique=False)
    op.create_table('Phone',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('model', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('operating_system', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('release_year', sa.DATE(), autoincrement=False, nullable=False),
                    sa.Column('memory', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('manufacturer_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.Column('color', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('delivery', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('is_out_of_stocks', sa.BOOLEAN(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturer.id'],
                                            name='phones_phone_manufacturer_id_72932f6b_fk_phones_manufacturer_id',
                                            initially='DEFERRED', deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='phones_phone_pkey')
                    )
    op.create_index('phones_phone_manufacturer_id_72932f6b', 'Phone', ['manufacturer_id'], unique=False)
    op.create_table('django_session',
                    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
                    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
                    )
    op.create_index('django_session_session_key_c0390e0f_like', 'django_session', ['session_key'], unique=False)
    op.create_index('django_session_expire_date_a5c62663', 'django_session', ['expire_date'], unique=False)
    op.create_table('main_comments',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('text_comments', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('post_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['post_id'], ['main_post.id'],
                                            name='main_comments_post_id_341fa7cd_fk_main_post_id', initially='DEFERRED',
                                            deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='main_comments_pkey')
                    )
    op.create_index('main_comments_post_id_341fa7cd', 'main_comments', ['post_id'], unique=False)
    op.create_table('main_post',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
                    sa.Column('author', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
                    sa.Column('info', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
                    sa.Column('img', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='main_post_pkey')
                    )
    op.create_table('User_groups',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'],
                                            name='User_groups_group_id_328392a3_fk_auth_group_id', initially='DEFERRED',
                                            deferrable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='User_groups_user_id_8f675f72_fk_User_id',
                                            initially='DEFERRED', deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='User_groups_pkey'),
                    sa.UniqueConstraint('user_id', 'group_id', name='User_groups_user_id_group_id_d63e199e_uniq')
                    )
    op.create_index('User_groups_user_id_8f675f72', 'User_groups', ['user_id'], unique=False)
    op.create_index('User_groups_group_id_328392a3', 'User_groups', ['group_id'], unique=False)
    op.create_table('django_content_type',
                    sa.Column('id', sa.INTEGER(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
                    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
                    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('Product',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('clothes', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
                    sa.Column('name_clothes', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('brand_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.Column('photo', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
                    sa.CheckConstraint('price >= 0', name='Product_price_check'),
                    sa.ForeignKeyConstraint(['brand_id'], ['Brand.id'], name='Product_brand_id_bb588269_fk_Brand_id',
                                            initially='DEFERRED', deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='Product_pkey')
                    )
    op.create_index('Product_brand_id_bb588269', 'Product', ['brand_id'], unique=False)
    op.create_table('Brand',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('brand', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='Brand_pkey')
                    )
    op.create_table('User_user_permissions',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'],
                                            name='User_user_permission_permission_id_8e998ba4_fk_auth_perm',
                                            initially='DEFERRED', deferrable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['User.id'],
                                            name='User_user_permissions_user_id_2c6da4d4_fk_User_id',
                                            initially='DEFERRED', deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='User_user_permissions_pkey'),
                    sa.UniqueConstraint('user_id', 'permission_id',
                                        name='User_user_permissions_user_id_permission_id_af0f54ec_uniq')
                    )
    op.create_index('User_user_permissions_user_id_2c6da4d4', 'User_user_permissions', ['user_id'], unique=False)
    op.create_index('User_user_permissions_permission_id_8e998ba4', 'User_user_permissions', ['permission_id'],
                    unique=False)
    op.create_table('auth_group_permissions',
                    sa.Column('id', sa.BIGINT(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'],
                                            name='auth_group_permissions_group_id_b120cbf9_fk_auth_group_id',
                                            initially='DEFERRED', deferrable=True),
                    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'],
                                            name='auth_group_permissio_permission_id_84c5c92e_fk_auth_perm',
                                            initially='DEFERRED', deferrable=True),
                    sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
                    sa.UniqueConstraint('group_id', 'permission_id',
                                        name='auth_group_permissions_group_id_permission_id_0cd325b0_uniq')
                    )
    op.create_index('auth_group_permissions_permission_id_84c5c92e', 'auth_group_permissions', ['permission_id'],
                    unique=False)
    op.create_index('auth_group_permissions_group_id_b120cbf9', 'auth_group_permissions', ['group_id'], unique=False)
    op.create_table('auth_group',
                    sa.Column('id', sa.INTEGER(),
                              sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647,
                                          cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
                    sa.UniqueConstraint('name', name='auth_group_name_key')
                    )
    op.create_index('auth_group_name_a6ea08ec_like', 'auth_group', ['name'], unique=False)
    op.drop_table('Password')
    # ### end Alembic commands ###
